const { GuildConfig } = require('./models');

// Event handler for when a new member joins the guild
client.on('guildMemberAdd', async (member) => {
    const guildId = member.guild.id;
    const guildConfig = await GuildConfig.findOne({ where: { guildId } });

    if (guildConfig && guildConfig.welcomeChannelId) {
        const channel = member.guild.channels.cache.get(guildConfig.welcomeChannelId);
        if (channel) {
            channel.send(`üëã Welcome to the server, ${member}! We're glad to have you here.`);
        }
    }
});

   client.on('guildMemberAdd', async (member) => {
    const guildConfig = await GuildConfig.findOne({ where: { guildId: member.guild.id } });

    if (!guildConfig) return;

    const rolesToAssign = [];

    if (guildConfig.autoRoleId1) {
        const role1 = member.guild.roles.cache.get(guildConfig.autoRoleId1);
        if (role1) rolesToAssign.push(role1);
    }

    if (guildConfig.autoRoleId2) {
        const role2 = member.guild.roles.cache.get(guildConfig.autoRoleId2);
        if (role2) rolesToAssign.push(role2);
    }

    if (guildConfig.autoRoleId3) {
        const role3 = member.guild.roles.cache.get(guildConfig.autoRoleId3);
        if (role3) rolesToAssign.push(role3);
    }

    if (rolesToAssign.length > 0) {
        try {
            await member.roles.add(rolesToAssign);
            console.log(`‚úÖ Assigned roles to ${member.user.tag}: ${rolesToAssign.join(', ')}`);
        } catch (error) {
            console.error(`‚ùå Failed to assign roles to ${member.user.tag}:`, error);
        }
    }
});